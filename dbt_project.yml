
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'base_dbt_project'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'base_dbt_project'

# vars:
#   surrogate_key_treat_nulls_as_empty_strings: true

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  base_dbt_project:
    # Config indicated by + and applies to all files under models/example/
    +enabled: >
      {{ false if target.name == 'samples' else true }}
    re_data_monitored: true
    analytics:
      +schema: analytics
      +tags: analytics
      +materialized: table
    sales:
      staging: &staging
        +materialized: table # or view/ephemeral
        +schema: staging
        +tags: stg
        # If samples are enabled for any source, do the following:
        erp:
          samples:
            +enabled: |
              {{ true if target.name == 'samples' else false }}
            +schema: raw_samples
            +tags: samples
            +materialized: table
            +post-hook:
              # Here you need to change "analysts" to whatever role people working
              # in dbt are part of.
              - "grant select on {{ this }} to analysts"
      intermediate: &intermediate
        +materialized: table # or view
        +schema: intermediate # or staging
        +tags: int
      marts: &marts
        +materialized: table
        +schema: marts # or public
        +tags: marts
        # +grants: # This does not work on postgres (it seems)
        #     select: ['bi_user']

  elementary:
    +enabled: >
      {{ false if target.name == 'samples' else true }}
    +schema: elementary
    +tags: eds

  re_data:
    +enabled: >
      {{ false if target.name == 'samples' else true }}
    +schema: re_data
    +tags: re